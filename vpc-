{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "AWS CloudFormation Template for a multi-AZ WorPress deployment & multi-AZ RDS deployment",
    "Parameters": {
        "InstanceType": {
            "Description": "WebServer EC2 instance type",
            "Type": "String",
            "Default": "t2.micro",
            "AllowedValues": [
                "t2.micro",
                "m3.large",
                "m3.xlarge",
                "c4.medium",
                "c4.xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type."
        },
        "KeyName": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "255",
            "Default":  "candidate16_keypair",
            "AllowedPattern": "[\\x20-\\x7E]*",
            "ConstraintDescription": "can contain only ASCII characters."
        },
        "SSHLocation": {
            "Description": " The IP address range that can be used to SSH to the EC2 instances",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "0.0.0.0/0",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "DBClass": {
            "Description": "Database instance class",
            "Type": "String",
            "Default": "db.t2.micro",
            "AllowedValues": [
                "db.t2.micro",
                "db.m3.medium",
                "db.m3.large",
                "db.m3.xlarge",
                "db.m3.2xlarge",
                "db.m4.large",
                "db.m4.xlarge",
                "db.r3.large",
                "db.r3.xlarge",
                "db.r3.2xlarge"
            ],
            "ConstraintDescription": "must select a valid database instance type."
        },
        "DBName": {
            "Default": "wordpressdb",
            "Description": "The WordPress database name",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "64",
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters."
        },
        "DBUser": {
            "NoEcho": "true",
            "Description": "The WordPress database admin account username",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "16",
            "Default": "admin",
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters."
        },
        "DBPassword": {
            "NoEcho": "true",
            "Description": "The WordPress database admin account password",
            "Type": "String",
            "MinLength": "8",
            "MaxLength": "41",
            "Default": "trinimbus",
            "AllowedPattern": "[a-zA-Z0-9]*",
            "ConstraintDescription": "must contain only alphanumeric characters."
        },
        "MultiAZDatabase": {
            "Default": "true",
            "Description": "Create a Multi-AZ MySQL Amazon RDS database instance",
            "Type": "String",
            "AllowedValues": [
                "true",
                "false"
            ],
            "ConstraintDescription": "must be either true or false."
        },
        "DBAllocatedStorage": {
            "Default": "5",
            "Description": "The size of the database (Gb)",
            "Type": "Number",
            "MinValue": "5",
            "MaxValue": "1024",
            "ConstraintDescription": "must be between 5 and 1024Gb."
        }
    },
    "Resources": {
        "VPC01": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": "10.1.0.0/16",
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackId"
                        }
                    }
                ]
            }
        },
        "PublicSubnet01": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": { "Ref": "VPC01" },
                "CidrBlock": "10.1.1.0/24",
                "AvailabilityZone": "us-east-1a",
                "Tags" : [ { "Key" : "Network", "Value" : "Public" } ]
            }
        },
        "PrivateSubnet01": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": { "Ref": "VPC01" },
                "CidrBlock": "10.1.2.0/24",
                "AvailabilityZone": "us-east-1a",
                "Tags" : [ { "Key" : "Network", "Value" : "Private" } ]
            }
        },
        "PublicSubnet02": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC01"
                },
                "CidrBlock": "10.1.3.0/24",
                "AvailabilityZone": "us-east-1b",
                "Tags" : [ { "Key" : "Network", "Value" : "Public" } ]
            }
        },
        "PrivateSubnet02": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC01"
                },
                "CidrBlock": "10.1.4.0/24",
                "AvailabilityZone": "us-east-1b",
                "Tags" : [ { "Key" : "Network", "Value" : "Private" } ]
            }
        },
        "InternetGateway": {
            "Type" : "AWS::EC2::InternetGateway",
            "Properties" : {
                "Tags" : [ {"Key" : "Network", "Value" : "Public"}]
                }
        },
        "AttachGateway": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC01"
                },
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "ElasticLoadBalancer": {
            "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
            "Properties": {
                "SecurityGroups": [
                    {
                        "Ref": "LoadBalancerSecurityGroup"
                    }
                ],
                "Subnets": [
                    {
                        "Ref": "PublicSubnet01"
                    },
                    {
                        "Ref": "PublicSubnet02"
                    }
                ],
                "Listeners": [ {
                    "LoadBalancerPort": "443",
                    "InstancePort" : "443",
                    "Protocol" : "HTTPS",
                    "SSLCertificateId" : "arn:aws:acm:us-east-1:478586959127:certificate/c6ef03d0-f861-459d-a727-5dfc3b9f2d97"
                } ],
                "Policies" : [{
                    "PolicyName" : "ELBSecurityPolicyName",
                    "PolicyType" : "SSLNegotiationPolicyType",
                    "Attributes" : [{
                        "Name"  : "Reference-Security-Policy",
                        "Value" : "ELBSecurityPolicy-2016-08"
                    }]
                }]
            }
        },
        "LoadBalancerSecurityGroup" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Enable HTTPS access on port 443 to 8080",
                "VpcId" : { "Ref" : "VPC01" },
                "SecurityGroupIngress" : [ { 
                    "IpProtocol" : "tcp",
                    "FromPort" : "443",
                    "ToPort" : "443",
                    "CidrIp" : "0.0.0.0/0"
                } ],
                "SecurityGroupEgress" : [ { 
                    "IpProtocol" : "tcp",
                    "FromPort" : "8080",
                    "ToPort" : "8080",
                    "CidrIp" : "0.0.0.0/0"
                } ]
            }
        },
        "WordPress01EC2": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "SecurityGroupIds" : [ { "Ref" : "InstanceSecurityGroup" } ],
                "ImageId" : "ami-f7e311e1",
                "InstanceType" : { "Ref" : "InstanceType" },
                "SubnetId": { "Ref": "PublicSubnet01" }
            }
        },
        "WordPress02EC2": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "SecurityGroupIds" : [ { "Ref" : "InstanceSecurityGroup" } ],
                "ImageId" : "ami-f7e311e1",
                "InstanceType" : { "Ref" : "InstanceType" },
                "SubnetId": { "Ref": "PublicSubnet02" }
            }
        },
        "InstanceSecurityGroup" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Enable SSH access via port 22",
                "VpcId" : { "Ref" : "VPC01" },
                "SecurityGroupIngress" : [ 
                    {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref" : "SSHLocation"}},
                    ]
            }
        },
        "DBSubnetGroup" : {
            "Type" : "AWS::RDS::DBSubnetGroup",
            "Properties" : {
                "DBSubnetGroupDescription" : "Subnets the database will span",
                "SubnetIds" : [ "Ref": "PrivateSubnet01", "Ref": "PrivateSubnet02" ],
                "Tags" : [ {"Key" : "Network", "Value" : "Private"} ]
            }
        },
        "DBSecurityGroup": {
            "Type": "AWS::RDS::DBSecurityGroup",
            "Properties": {
                "EC2VpcId" : { "Ref" : "VPC01" },
                "DBSecurityGroupIngress": {
                    "EC2SecurityGroupId": { "Ref": "InstanceSecurityGroup" }
                },
                "GroupDescription": "database access"
            }
        },
        "DBInstance" : {
            "Type": "AWS::RDS::DBInstance",
            "Properties": {
                "DBName"            : { "Ref" : "DBName" },
                "Engine"            : "MySQL",
                "MultiAZ"           : { "Ref": "MultiAZDatabase" },
                "MasterUsername"    : { "Ref" : "DBUser" },
                "MasterUserPassword": { "Ref" : "DBPassword" },
                "DBInstanceClass"   : { "Ref" : "DBClass" },
                "DBSubnetGroupName" : { "Ref" : "DBSubnetGroup" },
                "AllocatedStorage"  : { "Ref" : "DBAllocatedStorage" },
                "DBSecurityGroups": [ { "Ref" : "DBSecurityGroup" } ]
            }
        },
        "NAT01" : {
            "DependsOn" : "AttachGateway",
            "Type" : "AWS::EC2::NatGateway",
            "Properties" : {
                "AllocationId" : { "Fn::GetAtt" : ["EIP01", "AllocationId"]},
                "SubnetId" : { "Ref" : "PrivateSubnet01"}
            }
        },
        "NAT02" : {
            "DependsOn" : "AttachGateway",
            "Type" : "AWS::EC2::NatGateway",
            "Properties" : {
                "AllocationId" : { "Fn::GetAtt" : ["EIP02", "AllocationId"]},
                "SubnetId" : { "Ref" : "PrivateSubnet02"}
            }
        },
        "EIP01" : {
            "Type" : "AWS::EC2::EIP",
            "Properties" : {
                "Domain" : "VPC01"
            }
        },
        "EIP02" : {
            "Type" : "AWS::EC2::EIP",
            "Properties" : {
                "Domain" : "VPC01"
            }
        },
        "PrivateRouteTable":{  
            "Type":"AWS::EC2::RouteTable",
            "Properties":{  
                "VpcId":{  
                    "Ref":"VPC01"
                },
            "Tags" : [ { "Key" : "Network", "Value" : "Private" } ]
            }
        },
        "PublicRouteTable":{  
            "Type":"AWS::EC2::RouteTable",
            "Properties":{  
                "VpcId":{  
                    "Ref":"VPC01"
                },
            "Tags" : [ { "Key" : "Network", "Value" : "Public" } ]
            }
        },
        "PublicRoute":{  
            "Type":"AWS::EC2::Route",
            "DependsOn":"AttachGateway",
            "Properties":{  
                "RouteTableId":{  
                    "Ref":"PublicRouteTable"
                },
            "DestinationCidrBlock":"0.0.0.0/0",
            "GatewayId":{  
                "Ref":"InternetGateway"
                }
            }
        },
        "PrivateACL":{  
            "Type":"AWS::EC2::NetworkAcl",
            "Properties":{  
                "VpcId":{  
                    "Ref":"VPC01"
                },
                "Tags" : [ { "Key" : "Network", "Value" : "Private" } ]
            }
        },
        "PublicACL":{  
            "Type":"AWS::EC2::NetworkAcl",
            "Properties":{  
                "VpcId":{  
                    "Ref":"VPC01"
                },
                "Tags" : [ { "Key" : "Network", "Value" : "Public" } ]
            }
        },
        "PrivateSubnetACLAssociation01":{  
            "Type":"AWS::EC2::SubnetNetworkAclAssociation",
            "Properties":{  
                "SubnetId":{  
                    "Ref":"PrivateSubnet01"
                },
                "NetworkAclId":{  
                    "Ref":"PrivateACL"
                }
            }
        },
        "PrivateSubnetACLAssociation02":{  
            "Type":"AWS::EC2::SubnetNetworkAclAssociation",
            "Properties":{  
                "SubnetId":{  
                    "Ref":"PrivateSubnet02"
                },
                "NetworkAclId":{  
                    "Ref":"PrivateACL"
                }
            }
        },
        "PublicSubnetACLAssociation01":{  
            "Type":"AWS::EC2::SubnetNetworkAclAssociation",
            "Properties":{  
                "SubnetId":{  
                    "Ref":"PublicSubnet01"
                },
                "NetworkAclId":{  
                    "Ref":"PublicACL"
                }
            }
        },
        "PublicSubnetACLAssociation02":{  
            "Type":"AWS::EC2::SubnetNetworkAclAssociation",
            "Properties":{  
                "SubnetId":{  
                    "Ref":"PublicSubnet02"
                },
                "NetworkAclId":{  
                    "Ref":"PublicACL"
                }
            }
        },
        "PrivateNATRoute01":{  
            "Type":"AWS::EC2::Route",
            "Properties":{
                "DestinationCidrBlock":"0.0.0.0/0",
                "NatGatewayId": {
                    "Ref": "NAT01"
                },
                "RouteTableId":{  
                    "Ref":"PrivateRouteTable"
                },
            }
        },
        "PrivateNATRoute01":{  
            "Type":"AWS::EC2::Route",
            "Properties":{
                "DestinationCidrBlock":"0.0.0.0/0",
                "NatGatewayId": {
                    "Ref": "NAT02"
                },
                "RouteTableId":{  
                    "Ref":"PrivateRouteTable"
                },
            }
        },
        "PublicSubnetRouteTableAssociation01":{  
            "Type":"AWS::EC2::SubnetRouteTableAssociation",
            "Properties":{  
                "SubnetId":{  
                    "Ref":"PublicSubnet01"
                },
            "RouteTableId":{  
                "Ref":"PublicRouteTable"
                }
            }
        },
        "PublicSubnetRouteTableAssociation02":{  
            "Type":"AWS::EC2::SubnetRouteTableAssociation",
            "Properties":{  
                "SubnetId":{  
                    "Ref":"PublicSubnet02"
                },
            "RouteTableId":{  
               "Ref":"PublicRouteTable"
                }
            }
        },
        "PrivateSubnetRouteTableAssociation01":{  
            "Type":"AWS::EC2::SubnetRouteTableAssociation",
            "Properties":{  
                "SubnetId":{  
                    "Ref":"PrivateSubnet01"
                },
            "RouteTableId":{  
               "Ref":"PrivateRouteTable"
                }
            }
        },
        "PrivateSubnetRouteTableAssociation02":{  
            "Type":"AWS::EC2::SubnetRouteTableAssociation",
            "Properties":{  
                "SubnetId":{  
                    "Ref":"PrivateSubnet02"
                },
            "RouteTableId":{  
               "Ref":"PrivateRouteTable"
                }
            }
        },
        "PublicACLEntry01":{  
            "Type":"AWS::EC2::NetworkAclEntry",
            "Properties":{  
                "CidrBlock":"0.0.0.0/0",
                "Egress":"true",
                "Protocol":"-1",
                "RuleAction":"allow",
                "RuleNumber":"100",
                "NetworkAclId":{  
                    "Ref":"PublicACL"
                }
            }
        },
        "PrivateACLEntry01":{  
            "Type":"AWS::EC2::NetworkAclEntry",
            "Properties":{  
                "CidrBlock":"0.0.0.0/0",
                "Egress":"true",
                "Protocol":"-1",
                "RuleAction":"allow",
                "RuleNumber":"100",
                "NetworkAclId":{  
                    "Ref":"PrivateACL"
                }
            }
        }
    }
}
